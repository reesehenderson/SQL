# For this project, I downloaded Spotify data from Kaggle.
# Then, I created a table to insert spotify data into. 
# Finally, I preformed analytics on the data using SQL. 

#CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

# Then, I inserted the Spotify Data .csv into the table. 

# Next, I explored the data using the following SQL. 

# First, I determined the average popularity, danceability, and energy by artist and track.
SELECT artist_name, track_name, avg(danceability), avg(popularity), avg(energy)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

# Then I determined who the top 10 artists are by popularity
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

# Lastly, I determined the top 5 artists and track name with a popularity rating of at least 90 *and* a danceability rating of at least 0.7.
SELECT artist_name, track_name, danceability, popularity 
FROM BIT_DB.Spotifydata
WHERE popularity >=90
AND danceability >=.7
GROUP BY track_name
ORDER BY popularity desc
LIMIT 5;
